# Указываем минимальную требуемую версию CMake (3.15 в данном случае).
# Это гарантирует, что CMake будет использовать функции, доступные в этой версии и выше.
cmake_minimum_required(VERSION 3.15)

# Задаем имя проекта и указываем, что это проект на языке C++.
# "otus-cpp-basic-libs" — это имя проекта, которое будет использоваться в сборке.
project(otus-cpp-basic-libs
        CXX)

# Добавляем поддиректорию "01_header_only" в сборку.
# Это означает, что CMake будет искать файл CMakeLists.txt в этой директории и выполнять его.
add_subdirectory(01_header_only)

# Добавляем поддиректорию "02_linking" в сборку.
# Аналогично предыдущей строке, но для другой директории.
add_subdirectory(02_linking)

# Добавляем поддиректорию "03_make" в сборку.
# Это позволяет организовать проект в модули.
add_subdirectory(03_make)

# Добавляем поддиректорию "04_find_package" в сборку.
# Здесь может быть пример использования команды `find_package` для поиска внешних библиотек.
add_subdirectory(04_find_package)

# Добавляем поддиректорию "05_FetchContent" в сборку.
# FetchContent — это механизм CMake для загрузки и управления зависимостями.
add_subdirectory(05_FetchContent)

# Добавляем поддиректорию "06_ExternalProject" в сборку.
# ExternalProject — это инструмент для управления внешними проектами, которые собираются отдельно.
add_subdirectory(06_ExternalProject)